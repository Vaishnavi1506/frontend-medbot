{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate,useSearchParams}from\"react-router-dom\";import{account}from\"../appwriteConfig\";// Ensure this import matches your configuration\nimport logo from'../components/logo.png';import'./ResetPassword.css';// Ensure you have the correct styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const[password,setPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[showPassword,setShowPassword]=useState(false);const[showConfirmPassword,setShowConfirmPassword]=useState(false);const[error,setError]=useState(\"\");const[loading,setLoading]=useState(false);const[searchParams]=useSearchParams();const navigate=useNavigate();// Extract the secret and userId from the query string\nconst secret=searchParams.get(\"secret\");const userId=searchParams.get(\"userId\");const handleResetPassword=async event=>{event.preventDefault();setError(\"\");setLoading(true);if(password!==confirmPassword){setError(\"Passwords do not match.\");setLoading(false);return;}try{// Call the update recovery function from Appwrite\nawait account.updateRecovery(userId,secret,password,confirmPassword);alert(\"Password reset successful. Please login with your new password.\");navigate(\"/login\");}catch(error){setError(\"Failed to reset password: \"+error.message);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"reset-password-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Company Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Reset Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleResetPassword,className:\"reset-password-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"form-label\",children:\"New Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-container\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:showPassword?\"text\":\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,\"aria-label\":\"New Password\",className:\"form-input\"}),/*#__PURE__*/_jsx(\"span\",{className:\"password-toggle-icon\",onClick:()=>setShowPassword(!showPassword),\"aria-label\":showPassword?\"Hide password\":\"Show password\",children:/*#__PURE__*/_jsx(\"span\",{className:\"material-icons\",children:showPassword?'üëÅÔ∏è':'üëÅÔ∏è‚Äçüó®Ô∏è'})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",className:\"form-label\",children:\"Confirm New Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-container\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"confirmPassword\",type:showConfirmPassword?\"text\":\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true,\"aria-label\":\"Confirm New Password\",className:\"form-input\"}),/*#__PURE__*/_jsx(\"span\",{className:\"password-toggle-icon\",onClick:()=>setShowConfirmPassword(!showConfirmPassword),\"aria-label\":showConfirmPassword?\"Hide password\":\"Show password\",children:/*#__PURE__*/_jsx(\"span\",{className:\"material-icons\",children:showConfirmPassword?'üëÅÔ∏è':'üëÅÔ∏è‚Äçüó®Ô∏è'})})]})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",disabled:loading,children:loading?\"Resetting Password...\":\"Reset Password\"})]})]});};export default ResetPassword;","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","account","logo","jsx","_jsx","jsxs","_jsxs","ResetPassword","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","error","setError","loading","setLoading","searchParams","navigate","secret","get","userId","handleResetPassword","event","preventDefault","updateRecovery","alert","message","className","children","src","alt","onSubmit","htmlFor","id","type","value","onChange","e","target","required","onClick","disabled"],"sources":["C:/Users/vaish/OneDrive/Documents/medbotsample/Frontned/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { account } from \"../appwriteConfig\"; // Ensure this import matches your configuration\r\nimport logo from '../components/logo.png';\r\nimport './ResetPassword.css'; // Ensure you have the correct styling\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [searchParams] = useSearchParams();\r\n    const navigate = useNavigate();\r\n\r\n    // Extract the secret and userId from the query string\r\n    const secret = searchParams.get(\"secret\");\r\n    const userId = searchParams.get(\"userId\");\r\n\r\n    const handleResetPassword = async (event) => {\r\n        event.preventDefault();\r\n        setError(\"\");\r\n        setLoading(true);\r\n\r\n        if (password !== confirmPassword) {\r\n            setError(\"Passwords do not match.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Call the update recovery function from Appwrite\r\n            await account.updateRecovery(userId, secret, password, confirmPassword);\r\n            alert(\"Password reset successful. Please login with your new password.\");\r\n            navigate(\"/login\");\r\n        } catch (error) {\r\n            setError(\"Failed to reset password: \" + error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-password-container\">\r\n            <img src={logo} alt=\"Company Logo\" className=\"logo\" />\r\n            <h1 className=\"header\">Reset Password</h1>\r\n            <form onSubmit={handleResetPassword} className=\"reset-password-form\">\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">New Password</label>\r\n                    <div className=\"password-container\">\r\n                        <input\r\n                            id=\"password\"\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                            aria-label=\"New Password\"\r\n                            className=\"form-input\"\r\n                        />\r\n                        <span\r\n                            className=\"password-toggle-icon\"\r\n                            onClick={() => setShowPassword(!showPassword)}\r\n                            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                        >\r\n                            <span className=\"material-icons\">\r\n                                {showPassword ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è'}\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm New Password</label>\r\n                    <div className=\"password-container\">\r\n                        <input\r\n                            id=\"confirmPassword\"\r\n                            type={showConfirmPassword ? \"text\" : \"password\"}\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            required\r\n                            aria-label=\"Confirm New Password\"\r\n                            className=\"form-input\"\r\n                        />\r\n                        <span\r\n                            className=\"password-toggle-icon\"\r\n                            onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                            aria-label={showConfirmPassword ? \"Hide password\" : \"Show password\"}\r\n                        >\r\n                            <span className=\"material-icons\">\r\n                                {showConfirmPassword ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è'}\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                <button type=\"submit\" className=\"submit-button\" disabled={loading}>\r\n                    {loading ? \"Resetting Password...\" : \"Reset Password\"}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,eAAe,KAAQ,kBAAkB,CAC/D,OAASC,OAAO,KAAQ,mBAAmB,CAAE;AAC7C,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CACzC,MAAO,qBAAqB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,eAAe,CAAEC,kBAAkB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACc,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACgB,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CACrE,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACoB,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACsB,YAAY,CAAC,CAAGpB,eAAe,CAAC,CAAC,CACxC,KAAM,CAAAqB,QAAQ,CAAGtB,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAuB,MAAM,CAAGF,YAAY,CAACG,GAAG,CAAC,QAAQ,CAAC,CACzC,KAAM,CAAAC,MAAM,CAAGJ,YAAY,CAACG,GAAG,CAAC,QAAQ,CAAC,CAEzC,KAAM,CAAAE,mBAAmB,CAAG,KAAO,CAAAC,KAAK,EAAK,CACzCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtBV,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAIX,QAAQ,GAAKE,eAAe,CAAE,CAC9BO,QAAQ,CAAC,yBAAyB,CAAC,CACnCE,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CAEA,GAAI,CACA;AACA,KAAM,CAAAlB,OAAO,CAAC2B,cAAc,CAACJ,MAAM,CAAEF,MAAM,CAAEd,QAAQ,CAAEE,eAAe,CAAC,CACvEmB,KAAK,CAAC,iEAAiE,CAAC,CACxER,QAAQ,CAAC,QAAQ,CAAC,CACtB,CAAE,MAAOL,KAAK,CAAE,CACZC,QAAQ,CAAC,4BAA4B,CAAGD,KAAK,CAACc,OAAO,CAAC,CAC1D,CAAC,OAAS,CACNX,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,mBACIb,KAAA,QAAKyB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACrC5B,IAAA,QAAK6B,GAAG,CAAE/B,IAAK,CAACgC,GAAG,CAAC,cAAc,CAACH,SAAS,CAAC,MAAM,CAAE,CAAC,cACtD3B,IAAA,OAAI2B,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,cAC1C1B,KAAA,SAAM6B,QAAQ,CAAEV,mBAAoB,CAACM,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAChE1B,KAAA,QAAKyB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxB5B,IAAA,UAAOgC,OAAO,CAAC,UAAU,CAACL,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,cAAY,CAAO,CAAC,cACrE1B,KAAA,QAAKyB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAC/B5B,IAAA,UACIiC,EAAE,CAAC,UAAU,CACbC,IAAI,CAAE1B,YAAY,CAAG,MAAM,CAAG,UAAW,CACzC2B,KAAK,CAAE/B,QAAS,CAChBgC,QAAQ,CAAGC,CAAC,EAAKhC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7CI,QAAQ,MACR,aAAW,cAAc,CACzBZ,SAAS,CAAC,YAAY,CACzB,CAAC,cACF3B,IAAA,SACI2B,SAAS,CAAC,sBAAsB,CAChCa,OAAO,CAAEA,CAAA,GAAM/B,eAAe,CAAC,CAACD,YAAY,CAAE,CAC9C,aAAYA,YAAY,CAAG,eAAe,CAAG,eAAgB,CAAAoB,QAAA,cAE7D5B,IAAA,SAAM2B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC3BpB,YAAY,CAAG,KAAK,CAAG,SAAS,CAC/B,CAAC,CACL,CAAC,EACN,CAAC,EACL,CAAC,cACNN,KAAA,QAAKyB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxB5B,IAAA,UAAOgC,OAAO,CAAC,iBAAiB,CAACL,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,sBAAoB,CAAO,CAAC,cACpF1B,KAAA,QAAKyB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAC/B5B,IAAA,UACIiC,EAAE,CAAC,iBAAiB,CACpBC,IAAI,CAAExB,mBAAmB,CAAG,MAAM,CAAG,UAAW,CAChDyB,KAAK,CAAE7B,eAAgB,CACvB8B,QAAQ,CAAGC,CAAC,EAAK9B,kBAAkB,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACpDI,QAAQ,MACR,aAAW,sBAAsB,CACjCZ,SAAS,CAAC,YAAY,CACzB,CAAC,cACF3B,IAAA,SACI2B,SAAS,CAAC,sBAAsB,CAChCa,OAAO,CAAEA,CAAA,GAAM7B,sBAAsB,CAAC,CAACD,mBAAmB,CAAE,CAC5D,aAAYA,mBAAmB,CAAG,eAAe,CAAG,eAAgB,CAAAkB,QAAA,cAEpE5B,IAAA,SAAM2B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC3BlB,mBAAmB,CAAG,KAAK,CAAG,SAAS,CACtC,CAAC,CACL,CAAC,EACN,CAAC,EACL,CAAC,CACLE,KAAK,eAAIZ,IAAA,MAAG2B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEhB,KAAK,CAAI,CAAC,cAClDZ,IAAA,WAAQkC,IAAI,CAAC,QAAQ,CAACP,SAAS,CAAC,eAAe,CAACc,QAAQ,CAAE3B,OAAQ,CAAAc,QAAA,CAC7Dd,OAAO,CAAG,uBAAuB,CAAG,gBAAgB,CACjD,CAAC,EACP,CAAC,EACN,CAAC,CAEd,CAAC,CAED,cAAe,CAAAX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}